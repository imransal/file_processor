#!/usr/bin/env python3
"""
Excel Report Viewer Script

This script helps you examine the structure and content of the Excel reports
generated by the file processor.

Author: GitHub Copilot
Date: October 2025
"""

import pandas as pd
from pathlib import Path
import os

def view_excel_report(excel_file_path):
    """View the structure and sample content of the Excel report"""
    try:
        # Read Excel file
        excel_file = pd.ExcelFile(excel_file_path)
        
        print("=" * 80)
        print(f"EXCEL REPORT VIEWER: {Path(excel_file_path).name}")
        print("=" * 80)
        
        print(f"\nAvailable sheets ({len(excel_file.sheet_names)}):")
        for i, sheet_name in enumerate(excel_file.sheet_names, 1):
            print(f"  {i}. {sheet_name}")
        
        print("\n" + "=" * 80)
        
        # Display content of each sheet
        for sheet_name in excel_file.sheet_names:
            print(f"\nSHEET: {sheet_name}")
            print("-" * 60)
            
            df = pd.read_excel(excel_file_path, sheet_name=sheet_name)
            
            print(f"Rows: {len(df)}, Columns: {len(df.columns)}")
            print(f"Column names: {list(df.columns)}")
            
            if len(df) > 0:
                print(f"\nFirst 5 rows:")
                print(df.head().to_string(index=False))
                
                if len(df) > 5:
                    print(f"\n... and {len(df) - 5} more rows")
            else:
                print("No data in this sheet.")
            
            print("\n" + "-" * 60)
        
        print("\n" + "=" * 80)
        print("END OF REPORT PREVIEW")
        print("=" * 80)
        
    except Exception as e:
        print(f"Error reading Excel file: {str(e)}")


def main():
    """Main function to view Excel reports"""
    base_path = Path(r"C:\Users\IS19\Documents\as_built_extraction")
    
    # Find all Excel reports
    excel_reports = list(base_path.glob("processing_report_*.xlsx"))
    
    if not excel_reports:
        print("No Excel reports found in the directory.")
        return
    
    if len(excel_reports) == 1:
        print(f"Found 1 Excel report: {excel_reports[0].name}")
        view_excel_report(excel_reports[0])
    else:
        print(f"Found {len(excel_reports)} Excel reports:")
        for i, report in enumerate(excel_reports, 1):
            print(f"  {i}. {report.name}")
        
        # View the most recent one
        latest_report = max(excel_reports, key=lambda x: x.stat().st_mtime)
        print(f"\nViewing the most recent report: {latest_report.name}")
        view_excel_report(latest_report)


if __name__ == "__main__":
    main()